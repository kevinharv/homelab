---
# OS Configuration Pre-Requisites
- name: Set SELinux Permissive - Runtime
  ansible.posix.selinux:
    policy: targeted
    state: permissive

- name: Set SELinux Permissive - Configuration
  ansible.builtin.lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=permissive'
    state: present

- name: Disable Swap - Runtime
  command: swapoff -a
  become: true

- name: Disable Swap - Configuration
  replace:
    path: /etc/fstab
    regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
    replace: '#\1\2\3swap\4'
    backup: yes
    
# Install Container Runtime
# - name: Add Docker Repository
#   ansible.builtin.yum_repository:
#     name: Docker
#     description: Docker Engine and container runtime repository.
#     baseurl: https://download.docker.com/linux/fedora/docker-ce.repo
#     gpgcheck: yes
#     gpgkey: "060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35"
#     enabled: yes

- name: Add Docker CE Repository
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/centos/docker-ce.repo"
    dest: "/etc/yum.repos.d/docker-ce.repo"

- name: Install Container Runtime
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Start & Enable Docker Service
  ansible.builtin.service:
    name: "docker"
    state: started
    enabled: yes

# Install Kubernetes and kubeadm
- name: Add Kubernetes Repository
  ansible.builtin.yum_repository:
    name: kubernetes
    description: Kubernetes Repository
    baseurl: "https://pkgs.k8s.io/core:/stable:/v1.30/rpm/"
    gpgcheck: yes
    gpgkey: "https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key"
    enabled: yes
    repo_gpgcheck: yes
    sslverify: yes

- name: Install Kubernetes Packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Start & Enable Kubelet Service
  ansible.builtin.service:
    name: kubelet
    state: started
    enabled: yes


# Init cluster on one control plane node - need to do checks to make idempotent
# Join additional control plane - setup HA
# Join worker nodes
